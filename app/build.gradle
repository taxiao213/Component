apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.yin.component"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //  在gradle配置此参数用于APT传参接收
        //  切记 必须写在 defaultConfig下
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [content: 'hello APT >> Annotation Processing Tool']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':library')
    //  注解器
    implementation project(':annotation')
    //  注解处理器
    annotationProcessor project(':compiler')

    //  用javapoet   写法https://github.com/square/javapoet
    implementation project(':AnnotationA')
    annotationProcessor project(':compilerA')
    if (!Boolean.valueOf(COMPONENTA_SWITCH)) {
        implementation project(':componentA')
    }
    if (!Boolean.valueOf(COMPONENTB_SWITCH)) {
        implementation project(':componentB')
    }
    if (!Boolean.valueOf(SKIN_LIBRARY_SWITCH)) {
        implementation project(':skinlibrary')
    }
    if (!Boolean.valueOf(SKIN_LIBRARY2_SWITCH)) {
        implementation project(':skinlibrary2')
    }
}
